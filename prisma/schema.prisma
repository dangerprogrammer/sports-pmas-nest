// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cpf   String  @unique
  roles Roles[] @default([ALUNO])

  aluno     Aluno?     @relation("aluno")
  professor Professor? @relation("professor")
  admin     Admin?     @relation("admin")

  hash     String
  hashedRt String?

  @@unique(fields: [id, cpf, createdAt, updatedAt])
  @@unique(fields: [id, createdAt, updatedAt])
  @@unique(fields: [createdAt, updatedAt])
  @@map("users")
}

model Aluno {
  id        Int      @id
  createdAt DateTime
  updatedAt DateTime
  user      User     @relation("aluno", fields: [id, cpf, createdAt, updatedAt], references: [id, cpf, createdAt, updatedAt])

  modalidades Modalidade[] @relation("aluno_modalidade")

  nome_comp  String
  cpf        String
  email      String
  tel        String
  endereco   String
  bairro     String
  data_nasc  DateTime
  sexo       Gender
  inscricoes Inscricao[] @relation("inscricoes")
  atestados  Atestado[]  @relation("atestados")
  menor      AlunoMenor? @relation("menor")

  @@unique([id, cpf, createdAt, updatedAt])
  @@unique([id, createdAt, updatedAt])
  @@map("alunos")
}

model Atestado {
  id        Int      @id
  createdAt DateTime
  updatedAt DateTime
  aluno     Aluno    @relation("atestados", fields: [id, createdAt, updatedAt], references: [id, createdAt, updatedAt])

  anexo String
  msg   String?

  @@unique([id, createdAt, updatedAt])
  @@map("atestados")
}

model AlunoMenor {
  id        Int      @id
  createdAt DateTime
  updatedAt DateTime
  aluno     Aluno    @relation("menor", fields: [id, createdAt, updatedAt], references: [id, createdAt, updatedAt])

  nomeResp1  String
  cpfResp1   String
  emailResp1 String
  telResp1   String

  nomeResp2  String?
  cpfResp2   String?
  emailResp2 String?
  telResp2   String?

  @@unique([id, createdAt, updatedAt])
  @@map("aluno_menors")
}

model Professor {
  id        Int      @id
  createdAt DateTime
  updatedAt DateTime
  user      User     @relation("professor", fields: [id, createdAt, updatedAt], references: [id, createdAt, updatedAt])

  @@unique([id, createdAt, updatedAt])
  @@map("professors")
}

model Admin {
  id        Int      @id
  createdAt DateTime
  updatedAt DateTime
  user      User     @relation("admin", fields: [id, createdAt, updatedAt], references: [id, createdAt, updatedAt])

  @@unique([id, createdAt, updatedAt])
  @@map("admins")
}

model Inscricao {
  id    Int   @id @default(autoincrement())
  aluno Aluno @relation("inscricoes", fields: [id], references: [id])

  aula    Aula    @unique
  horario Horario? @relation("horario_inscricao")
}

model Modalidade {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     Aula      @default(NATACAO)
  horarios Horario[] @relation("horario_modalidade")
  alunos   Aluno[]   @relation("aluno_modalidade")

  endereco String     @default("Endereco...")
  bairro   String     @default("Bairro...")
  local    Localidade @relation("local_modalidade", fields: [endereco, bairro], references: [endereco, bairro])

  vagas Int? @default(15)

  @@unique([endereco, bairro])
  @@map("modalidades")
}

model Horario {
  id          Int          @id @default(autoincrement())
  modalidades Modalidade[] @relation("horario_modalidade")

  aula      Aula?      @unique
  inscricao Inscricao? @relation("horario_inscricao", fields: [aula], references: [aula])

  time    DateTime @unique
  periodo Periodo

  @@map("horarios")
}

model Localidade {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  modalidades Modalidade[] @relation("local_modalidade")
  endereco    String       @unique
  bairro      String       @unique

  @@unique([endereco, bairro])
  @@map("localidades")
}

enum Periodo {
  MANHA
  TARDE
  NOITE
}

enum Aula {
  NATACAO
  HIDRO
}

enum Gender {
  FEMININO
  MASCULINO
  OUTRO
}

enum Roles {
  ALUNO
  PROFESSOR
  ADMIN
}
