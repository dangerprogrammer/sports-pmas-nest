// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cpf   String  @unique
  roles Roles[] @default([ALUNO])

  aluno     Aluno?     @relation("aluno")
  professor Professor? @relation("professor")
  admin     Admin?     @relation("admin")

  hash     String
  hashedRt String?

  @@unique(fields: [id, cpf, createdAt, updatedAt])
  @@unique(fields: [id, createdAt, updatedAt])
  @@unique(fields: [createdAt, updatedAt])
  @@map("users")
}

model Aluno {
  id        Int      @id
  createdAt DateTime
  updatedAt DateTime
  user      User     @relation("aluno", fields: [id, cpf, createdAt, updatedAt], references: [id, cpf, createdAt, updatedAt])

  nome_comp String
  cpf       String
  email     String
  tel       String
  endereco  String
  bairro    String
  data_nasc DateTime
  sexo      Gender
  inscricao Inscricao
  periodo   Periodo
  menor     AlunoMenor? @relation("menor")

  @@unique([id, cpf, createdAt, updatedAt])
  @@unique([id, createdAt, updatedAt])
  @@map("alunos")
}

model AlunoMenor {
  id        Int      @id
  createdAt DateTime
  updatedAt DateTime
  aluno     Aluno    @relation("menor", fields: [id, createdAt, updatedAt], references: [id, createdAt, updatedAt])

  nomeResp1 String
  cpfResp1 String
  emailResp1 String
  telResp1 String
  nomeResp2 String?
  cpfResp2 String?
  emailResp2 String?
  telResp2 String?

  @@unique([id, createdAt, updatedAt])
}

model Professor {
  id        Int      @id
  createdAt DateTime
  updatedAt DateTime
  user      User     @relation("professor", fields: [id, createdAt, updatedAt], references: [id, createdAt, updatedAt])

  @@unique([id, createdAt, updatedAt])
}

model Admin {
  id        Int      @id
  createdAt DateTime
  updatedAt DateTime
  user      User     @relation("admin", fields: [id, createdAt, updatedAt], references: [id, createdAt, updatedAt])

  @@unique([id, createdAt, updatedAt])
}

enum Periodo {
  MANHA
  TARDE
  NOITE
}

enum Inscricao {
  NATACAO
  HIDRO
}

enum Gender {
  FEMININO
  MASCULINO
  OUTRO
}

enum Roles {
  ALUNO
  PROFESSOR
  ADMIN
}
